from .third_party import pd, np, LineString


def river_data(*args, buffer = None):
    if buffer is None:
        river, polygon = river_list(*args)
        river['km distances'] = None
        for j in range(len(river)):
            riv = river.loc[river.index[j], 'geometry']
            x, y = riv.xy
            
            distances_km = []
            
            for i in range(len(x)):
                dis = conversion(x[i], y[i])
                distances_km = np.append(distances_km, dis)
            coordinates = [(distances_km[i], distances_km[i + 1]) for i in range(0, len(distances_km), 2)]
            
            # Create a LineString from the coordinate tuples
            line = LineString(coordinates)
            river.at[river.index[j], 'km distances'] = line
        return river
    else:
        river, polygon, buffer_polygon = river_list(*args, buffer = buffer)
        river['km distances'] = None
        
        
        for j in range(len(river)):
            riv = river.loc[river.index[j], 'new geometry']
            x, y = riv.xy
            
            distances_km = []
            
            for i in range(len(x)):
                dis = conversion(x[i], y[i])
                distances_km = np.append(distances_km, dis)
            coordinates = [(distances_km[i], distances_km[i + 1]) for i in range(0, len(distances_km), 2)]
            
            # Create a LineString from the coordinate tuples
            line = LineString(coordinates)
            river.at[river.index[j], 'km distances'] = line
        return river
